# Define the sequence of stages for job execution
stages:
  - build
  - test
  - quality-check
  - publish
  - deploy

build-backend:
  stage: build
  tags:
    - Neighbourly-runner
  image: gradle:latest
  script:
    - cd Backend
    - gradle wrapper
    - chmod +x gradlew
    - ./gradlew clean build
  artifacts:
    paths:
      - Backend/build/libs/*.jar


build-frontend:
  stage: build
  tags:
    - Neighbourly-runner
  image: node:18-alpine
  script:
    - cd Frontend
    - npm install
    - echo $BASE_URL
    - export BACKEND_BASE_URL=$BASE_URL
    - echo $BACKEND_BASE_URL
    - npm run build
  artifacts:
    paths:
      - Frontend/build

test:
  stage: test
  image: gradle:latest
  script:
    - cd Backend  
    - gradle test

quality-check:
  stage: quality-check
  image: openjdk:17
  script:
    - echo "Compiling the project"
    - mkdir smells/
    - java -jar $CI_PROJECT_DIR/quality/DesigniteJava.jar -i $CI_PROJECT_DIR -o smells/
  artifacts:
    paths:
      - smells/
      - $CI_PROJECT_DIR

publish-backend:
  image: docker:latest
  stage: publish
  tags:
    - Neighbourly-runner
  variables:
    DOCKER_TLS_CERTDIR: ""
    DOCKER_HOST: "tcp://docker:2375"
  services:
    - docker:dind
  script:
    - cd Backend
    - pwd
    - ls
    - echo $SERVER_IP
    - docker --version
    - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PWD docker.io
    - IMAGE_TAG="$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA"
    - docker build -t keshvigodhani/backend-api:$IMAGE_TAG . -f Dockerfile
    - docker push keshvigodhani/backend-api:$IMAGE_TAG
  only:
    - feat/public-booking
    - cicd_issue26
    - dev
    - main
    

publish-frontend:
  image: docker:latest
  stage: publish
  tags:
    - Neighbourly-runner
  variables:
    DOCKER_TLS_CERTDIR: ""
    DOCKER_HOST: "tcp://docker:2375"
  services:
    - docker:dind
  script:
    - cd Frontend
    - pwd
    - ls
    - echo $SERVER_IP
    - docker --version
    - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PWD docker.io
    - IMAGE_TAG="$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA"
    - docker build --build-arg BACKEND_BASE_URL=$BASE_URL -t keshvigodhani/frontend:$IMAGE_TAG . -f Dockerfile
    - docker push keshvigodhani/frontend:$IMAGE_TAG
  only:
    - feat/public-booking
    - cicd_issue26
    - dev
    - main

deploy-backend:
  image: alpine:latest
  stage: deploy
  tags:
    - Neighbourly-runner
  before_script:
    - apk update && apk add openssh-client
    - eval $(ssh-agent -s)
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$ID_RSA" | base64 -d > ~/.ssh/id_ed25519
    - chmod 600 ~/.ssh/id_ed25519
    - ssh-add ~/.ssh/id_ed25519
  script:
    - IMAGE_TAG="$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA"
    - case "$CI_COMMIT_REF_NAME" in
        dev)
          CONTAINER_NAME="neighbourly-dev-app"
          SERVER_PORT=8080
          DB_URL=$DEVINT_DB_URL
          DB_USER=$DEVINT_DB_USER
          DB_PASSWORD=$DEVINT_DB_PASSWORD
          ;;
        main)
          CONTAINER_NAME="neighbourly-prod-app"
          SERVER_PORT=8070
          DB_URL=$PROD_DB_URL
          DB_USER=$PROD_DB_USER
          DB_PASSWORD=$PROD_DB_PASSWORD
          ;;
        *)
          CONTAINER_NAME="neighbourly-test-app"
          SERVER_PORT=8000
          DB_URL=$TEST_DB_URL
          DB_USER=$TEST_DB_USER
          DB_PASSWORD=$TEST_DB_PASSWORD
          ;;
      esac
    - ssh -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PWD docker.io"
    - ssh -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker pull keshvigodhani/backend-api:$IMAGE_TAG"
    - ssh -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker stop $CONTAINER_NAME || true && docker container rm -f $CONTAINER_NAME || true"
    - ssh -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker run -d -p $SERVER_PORT:$SERVER_PORT --name $CONTAINER_NAME --restart=always -e SERVER_PORT=$SERVER_PORT -e SPRING_DATASOURCE_URL=$DB_URL -e SPRING_DATASOURCE_USERNAME=$DB_USER -e SPRING_DATASOURCE_PASSWORD=$DB_PASSWORD -e EMAIL_HOST=$EMAIL_HOST -e EMAIL_PORT=$EMAIL_PORT -e EMAIL_USERNAME=$EMAIL_USERNAME -e EMAIL_PASSWORD=$EMAIL_PASSWORD -e FRONTEND_HOST=$FRONTEND_HOST -e FRONTEND_LOGIN_URL=$FRONTEND_LOGIN_URL -e FRONTEND_UPDATE_PASSWORD_URL=$FRONTEND_UPDATE_PASSWORD_URL keshvigodhani/backend-api:$IMAGE_TAG"
  environment:
    name: development
    url: http://$SERVER_IP:$SERVER_PORT
  only:
    - feat/public-booking
    - cicd_issue26
    - dev
    - main

deploy-frontend:
  image: alpine:latest
  stage: deploy
  tags:
    - Neighbourly-runner
  before_script:
    - apk update && apk add openssh-client
    - eval $(ssh-agent -s)
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$ID_RSA" | base64 -d > ~/.ssh/id_ed25519
    - chmod 600 ~/.ssh/id_ed25519
    - ssh-add ~/.ssh/id_ed25519
  script:
    - IMAGE_TAG="$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA"
    - case "$CI_COMMIT_REF_NAME" in
        dev)
          CONTAINER_NAME="neighbourly-dev-app-frontend"
          SERVER_PORT=3000
          REACT_APP_BACKEND_BASE_URL=$DEV_BACKEND_BASE_URL
          ;;
        main)
          CONTAINER_NAME="neighbourly-prod-app-frontend"
          SERVER_PORT=3080
          REACT_APP_BACKEND_BASE_URL=$PROD_BACKEND_BASE_URL
          ;;
        *)
          CONTAINER_NAME="neighbourly-test-app-frontend"
          SERVER_PORT=3030
          REACT_APP_BACKEND_BASE_URL=$TEST_BACKEND_BASE_URL
          ;;
      esac
    - ssh -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PWD docker.io"
    - ssh -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker pull keshvigodhani/frontend:$IMAGE_TAG"
    - ssh -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker container rm -f $CONTAINER_NAME || true"
    - ssh -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker run -d -p $SERVER_PORT:$SERVER_PORT -e PORT=$SERVER_PORT -e REACT_APP_BACKEND_BASE_URL=$REACT_APP_BACKEND_BASE_URL --name $CONTAINER_NAME --restart=always keshvigodhani/frontend:$IMAGE_TAG"
  environment:
    name: development
    url: http://$SERVER_IP:$SERVER_PORT
  only:
    - feat/public-booking
    - cicd_issue26
    - dev
    - main
